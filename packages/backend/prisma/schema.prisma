generator client {
  provider = "prisma-client-js"
}
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User {
  id       Int     @id @default(autoincrement())
  login    String  @unique
  password String
  posts    Post[]
  comments Comment[]
  likes Like[]
  subscriptions Follow[] @relation("subscribers")
  subscribers Follow[] @relation("subscriptions")
}
model Follow {
 id       Int     @id @default(autoincrement())
 subscription  User  @relation("subscriptions",fields: [subscriptionId], references: [id], onDelete: Cascade)
 subscriptionId Int
 subscriber User @relation("subscribers",fields: [subscriberId], references: [id], onDelete: Cascade)
 subscriberId Int
 subscriberLogin String
 subscriptionLogin String
}

model Post {
  id       Int    @id @default(autoincrement())
  text     String
  images Image[]
  author   User   @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId Int
  comments Comment[]
  likes Like[]
  createdAt String
}
model Like {
  id       Int    @id @default(autoincrement())
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  post     Post   @relation(fields: [postId], references: [id], onDelete: Cascade)
  userId Int
  postId Int
}
model Image {
  id Int  @id @default(autoincrement())
  imageUrl String
  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId Int
}
model Comment {
   id       Int    @id @default(autoincrement())
   text String
   author   User   @relation(fields: [authorId], references: [id], onDelete:Cascade)
   authorLogin String
   authorId Int
   postId Int
   post  Post @relation (fields: [postId], references: [id], onDelete: Cascade)
   createdAt String
}
